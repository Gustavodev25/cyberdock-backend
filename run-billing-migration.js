#!/usr/bin/env node

/**
 * Script para executar a migra√ß√£o de corre√ß√£o de per√≠odos de cobran√ßa
 * 
 * Este script facilita a execu√ß√£o da migra√ß√£o com diferentes op√ß√µes
 */

const { runMigration, runTest, generateReport } = require('./migrations/fix-billing-periods-migration');

async function main() {
    const args = process.argv.slice(2);
    const command = args[0];
    
    console.log('üîß Migra√ß√£o de Corre√ß√£o de Per√≠odos de Cobran√ßa');
    console.log('=' .repeat(50));
    
    switch (command) {
        case 'report':
            console.log('üìä Gerando relat√≥rio de compara√ß√£o (sem fazer mudan√ßas)...');
            console.log('Este relat√≥rio mostra as diferen√ßas entre sistema antigo e novo');
            console.log('');
            await generateReport();
            break;
            
        case 'test':
            const userEmail = args[1];
            if (!userEmail) {
                console.error('‚ùå Uso: npm run migrate-billing test <email-do-usuario>');
                console.log('Exemplo: npm run migrate-billing test usuario@exemplo.com');
                process.exit(1);
            }
            console.log(`üß™ Testando migra√ß√£o para usu√°rio: ${userEmail}`);
            console.log('(As mudan√ßas n√£o ser√£o salvas - apenas teste)');
            console.log('');
            await runTest(userEmail);
            break;
            
        case 'run':
            console.log('üöÄ EXECUTANDO MIGRA√á√ÉO COMPLETA...');
            console.log('‚ö†Ô∏è  ATEN√á√ÉO: Esta opera√ß√£o ir√° recalcular TODAS as faturas!');
            console.log('üìù Backups ser√£o criados automaticamente');
            console.log('');
            
            // Confirma√ß√£o de seguran√ßa
            const readline = require('readline');
            const rl = readline.createInterface({
                input: process.stdin,
                output: process.stdout
            });
            
            const answer = await new Promise(resolve => {
                rl.question('Tem certeza que deseja continuar? (digite "SIM" para confirmar): ', resolve);
            });
            
            rl.close();
            
            if (answer !== 'SIM') {
                console.log('‚ùå Migra√ß√£o cancelada pelo usu√°rio');
                process.exit(0);
            }
            
            console.log('‚úÖ Confirma√ß√£o recebida. Iniciando migra√ß√£o...');
            console.log('');
            await runMigration();
            break;
            
        default:
            console.log('üìã Comandos dispon√≠veis:');
            console.log('');
            console.log('  npm run migrate-billing report');
            console.log('    üìä Gera relat√≥rio de compara√ß√£o sem fazer mudan√ßas');
            console.log('    üîç Mostra quais faturas ser√£o afetadas e por quanto');
            console.log('');
            console.log('  npm run migrate-billing test <email>');
            console.log('    üß™ Testa a migra√ß√£o em um usu√°rio espec√≠fico');
            console.log('    üìù N√£o salva as mudan√ßas - apenas para verifica√ß√£o');
            console.log('');
            console.log('  npm run migrate-billing run');
            console.log('    üöÄ Executa a migra√ß√£o completa em todos os usu√°rios');
            console.log('    ‚ö†Ô∏è  CUIDADO: Altera dados reais!');
            console.log('');
            console.log('üí° Recomenda√ß√£o: Execute "report" primeiro para ver o impacto');
            process.exit(1);
    }
}

// Executar
main().catch(error => {
    console.error('üí• Erro:', error.message);
    process.exit(1);
});